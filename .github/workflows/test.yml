name: Testing

on:
  push:
    branches:
        - main
  pull_request:
    branches:
        - main

jobs:
  Linting:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12.1]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run unit tests with coverage
      run: |
        set -o pipefail
        make unit-tests-cov-fail
    - name: Pytest coverage comment
      if: ${{ success() && github.event_name == 'pull_request' }}
      id: coverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        title: Coverage Report
        pytest-coverage-path: pytest-coverage.txt
        junitxml-path: pytest.xml
    - name: Pytest coverage GitHub summary
      if: ${{ success() && github.event_name == 'pull_request' }}
      run: |
        set -o pipefail
        echo '# Coverage report' >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat pytest-coverage.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo '\n\n\n'
        echo '${{ steps.coverageComment.outputs.coverageHtml }}' >> $GITHUB_STEP_SUMMARY
